:root {
    --boxColor: #0ff7;
}

.icosahedron-container {
    height: 400px;
    width: 400px;
    background-color: #000;
    display: flex;
    justify-content: center;
    align-items: center;
    // perspective: 1000px;
    // perspective-origin: 50% calc(50% - 200px);
}

.icosahedron {
    // property of polygon
    $width: 150px;
    $height: 0.86602540378 * $width;
    // property of icosahedron
    $inradius: 0.7557613141 * $width - 2px;
    $dihedral-angle: 138.189685deg;

    display: flex;
    align-items: center;
    justify-content: center;
    $border-width: 6px;
    width: $inradius*2;
    height: $inradius*2;
    position: relative;
    transform-style: preserve-3d;
    animation: happy-rotate 50s linear infinite forwards;

    // layout of each face
    .f1, .f2, .f3, .f4, .f5, .f6, .f7, .f8, .f9, .f10, .f11, .f12, .f13, .f14, .f15, .f16, .f17, .f18, .f19, .f20 {
        position: absolute;
        background: var(--boxColor);
        opacity: 0.9;
        height: $height;
        width: $width;
        z-index: 1;
        clip-path: polygon( 50% 0, 100% 100%, 0 100%);

        .bottom-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: $border-width solid white;
        }

        .left-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: 6px solid white;
            transform-origin:50% 66%;
            transform: rotateZ(120deg);
        }

        .right-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: 6px solid white;
            transform-origin:50% 66%;
            transform: rotateZ(-120deg);
        }
    }

    // positioning of 20 faces, use center of icosahedron as origin for transformation
    // this method works for convex regular polyhedrons only
    // partition is encouraged to create more complex polyhedrons
    .f1 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
    }

    // base on f1
    .f2 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
    }

    // base on f1
    .f3 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f1
    .f4 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }

    // base on f2
    .f5 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f2
    .f6 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f3
    .f7 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f3
    .f8 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f4
    .f9 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }

    // base on f4
    .f10 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, -0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }

    // base on f5
    .f11 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f6
    .f12 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f7
    .f13 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f8
    .f14 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
            rotate3d(0.5, -0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // base on f9
    .f15 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, -0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }

    // base on f10
    .f16 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, -0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
            rotate3d(-0.5, -0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }

    // base on f1
    .f17 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(1, 1, 0 , 180deg)
            rotateZ(90deg)
    }

    // f17 + f2
    .f18 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(1, 1, 0 , 180deg)
            rotateZ(90deg)
            rotateX($dihedral-angle - 180deg)
            rotateZ(180deg)
    }

    // f17 + f3
    .f19 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(1, 1, 0 , 180deg)
            rotateZ(90deg)
            rotate3d(0.5, 0.86602540378, 0 ,-($dihedral-angle - 180deg))
            rotateZ(60deg)
    }

    // f17 + f4
    .f20 {
        transform-origin: 50% 66% (-$inradius);
        transform:
            translateZ($inradius)
            rotate3d(1, 1, 0 , 180deg)
            rotateZ(90deg)
            rotate3d(-0.5, 0.86602540378, 0 ,($dihedral-angle - 180deg))
            rotateZ(-60deg)
    }
}

.sharp-icosahedron {
    // property of polygon
    $width: 75px;
    $height: 0.86602540378 * $width;
    // property of icosahedron
    $inradius: 0.7557613141 * $width - 2px;
    $dihedral-angle: 138.189685deg;

    display: flex;
    align-items: center;
    justify-content: center;
    $border-width: 6px;
    width: $width;
    height: $height;
    position: relative;
    transform-style: preserve-3d;
    transform: rotateX(90deg);
    animation: sharp-rotate 5s linear infinite forwards;

    // separate the work to parts and create containers as basement
    .top {
        position: absolute;
        width: $width/0.61804697157;
        height: $width/0.61804697157*0.951174289246;
        display: flex;
        justify-content: center;
        align-items: flex-end;
        transform-style: preserve-3d;
        transform:
            translateZ($width*0.8506508085/2/2 - 1px); // ratio d https://mae.ufl.edu/~uhk/ICOSAHEDRON.pdf
    }

    .btm {
        position: absolute;
        width: $width/0.61804697157;
        height: $width/0.61804697157*0.951174289246;
        display: flex;
        justify-content: center;
        align-items: flex-end;
        transform-style: preserve-3d;
        transform:
            translateZ(-$width*0.8506508085/2/2 + 1px)
            translateX(3px)
            rotateZ(36deg);
    }

    // layout of each face
    .f1, .f2, .f3, .f4, .f5, .f6, .f7, .f8, .f9, .f10, .f11, .f12, .f13, .f14, .f15, .f16, .f17, .f18, .f19, .f20 {
        position: absolute;
        background: var(--boxColor);
        opacity: 0.9;
        height: $height;
        width: $width;
        z-index: 1;
        clip-path: polygon( 50% 0, 100% 100%, 0 100%);

        .bottom-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: $border-width solid white;
        }

        .left-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: 6px solid white;
            transform-origin:50% 66%;
            transform: rotateZ(120deg);
        }

        .right-border {
            position: absolute;
            width: $width;
            height: calc( $height - $border-width );
            border-bottom: 6px solid white;
            transform-origin:50% 66%;
            transform: rotateZ(-120deg);
        }
    }

    //positioning of 20 faces
    .f1 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            rotateX(-36.5deg)
    }

    // base on f1
    .f2 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX($width/2+$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(-72deg)
            rotateX(-36.5deg)
    }

    // base on f1
    .f3 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX($width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(-144deg)
            rotateX(-36.5deg)
    }

    // base on f1
    .f4 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2-$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(72deg)
            rotateX(-36.5deg)
    }

    // base on f1
    .f5 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(144deg)
            rotateX(-36.5deg)
    }

    // base on f1
    .f6 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            rotateX(100deg)
    }

    // base on f2
    .f7 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX($width/2+$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(-72deg)
            rotateX(100deg)
    }

    // base on f3
    .f8 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX($width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(-144deg)
            rotateX(100deg)
    }

    // base on f4
    .f9 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2-$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(72deg)
            rotateX(100deg)
    }

    // base on f5
    .f10 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(144deg)
            rotateX(100deg)
    }

    // base on f1
    .f11 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            rotateX(-100deg)
    }

    // base on f2
    .f12 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX($width/2+$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(-72deg)
            rotateX(-100deg)
    }

    // base on f3
    .f13 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX($width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(-144deg)
            rotateX(-100deg)
    }

    // base on f4
    .f14 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2-$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(72deg)
            rotateX(-100deg)
    }

    // base on f5
    .f15 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 0.5, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(144deg)
            rotateX(-100deg)
    }

    // base on f1
    .f16 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            rotateX(36.5deg)
    }

    // base on f2
    .f17 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX($width/2+$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(-72deg)
            rotateX(36.5deg)
    }

    // base on f3
    .f18 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX($width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(-144deg)
            rotateX(36.5deg)
    }

    // base on f4
    .f19 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2-$width/2*0.30901699437)
            translateY(-$width/2*0.95105651629)
            rotateZ(72deg)
            rotateX(36.5deg)
    }

    // base on f5
    .f20 {
        transform-origin: 50% 100%;
        transform:
            matrix3d(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 3, 0,
                0, 0, 0, 1
            )
            translateX(-$width/2*0.80901699437)
            translateY(-$width/2*0.80901699437*3.07768353718)
            rotateZ(144deg)
            rotateX(36.5deg)
    }
}

@keyframes sharp-rotate {
    from { transform: rotateY(0deg) rotateX(-90deg) rotateZ(0deg); }
    to { transform: rotateY(0deg) rotateX(-90deg) rotateZ(360deg); }
}